apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: "2019-07-16T13:29:08Z"
  generation: 1
  labels:
    run: "{{ .Release.Name }}"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
  name: "{{ .Release.Name }}"
  namespace: default
  resourceVersion: "48023"
  selfLink: /apis/apps/v1/namespaces/default/deployments/my-todolist
  uid: 5d2555a9-4013-4882-a302-b51ffaa4ea3b
spec:
  progressDeadlineSeconds: 600
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      run: "{{ .Release.Name }}"
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: "{{ .Release.Name }}"
    spec:
      {{- if .Values.image.pullSecret }}    
          imagePullSecrets:
              - name: "{{ .Values.image.pullSecret }}"
      {{- end }}
      containers:
      - image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: my-todolist
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status: {}
